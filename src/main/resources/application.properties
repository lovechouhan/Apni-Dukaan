spring.application.name=Ecommerce

# Server Configuration
server.port=${PORT}



# db configuration
spring.datasource.url=jdbc:mysql://interchange.proxy.rlwy.net:51214/railway
spring.datasource.username=root
spring.datasource.password=${DB_PASSWORD:eGQscoXrXrgBcKWGTPmZzzHjyFQYZCQx}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.thymeleaf.cache=false

spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true



# Oauth2.O client Configuration
# google configuration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile, email

# email configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${mail_username}
spring.mail.password=${mail_password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


spring.servlet.multipart.max-file-size=1000MB
spring.servlet.multipart.max-request-size=1000MB

# Memory and Performance Configuration
spring.jpa.properties.hibernate.jdbc.batch_size=30
spring.jpa.properties.hibernate.jdbc.fetch_size=50
spring.jpa.properties.hibernate.generate_statistics=false

# Tomcat Configuration
server.tomcat.threads.max=4
server.tomcat.threads.min-spare=1
server.tomcat.accept-count=10

# Connection Pool Settings
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=300000

# Cache Configuration
spring.jpa.properties.hibernate.cache.use_second_level_cache=false



# Model to use (e.g., mistral, llama3, gemma, phi)
spring.ai.ollama.url=${AI_URL}

spring.ai.ollama.chat.options.model=mistral
spring.ai.ollama.chat.options.temperature=0.7

# Cloudinary Configuration
cloudinary.cloud_name=${cloudinary_cloudname}
cloudinary.api_key=${cloudinary_key}
cloudinary.api_secret=${cloudinary_secret}

